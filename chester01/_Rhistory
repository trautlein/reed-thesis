set.seed(154)
w <- rnorm(200, 0, 1)
x <- cumsum(w)
wd <- w + 0.2
xd <- cumsum(wd)
plot.ts(xd, ylim = c(-5, 55))
lines(x)
lines(0.2 * (1:200), lty = "dashed")
ar(x)
ar(x, order.max = 1)
ar_model <- ar(x, order.max = 1)
summary(ar_model)
ts_diag(ar_model)
tsdiag(ar_model)
library(ggplot2)
library(dplyr)
setwd("~/Insync/thesis/")
#setwd("/Volumes/TRAUTLEIN/thesis")
d <- read.csv("~/Insync/thesis/data/SenateData002.csv")
#d <- read.csv("data/SenateData002.csv")
d <- d[,c("Cong.","ICPSR", "State.Code", "State", "Party", "Name", "X1st.Dim.", "X2nd.Dim.", "Role")]
d <- dplyr::rename(d, cong = Cong.,
icpsr = ICPSR,
statecode = State.Code,
state = State,
party = Party,
name = Name,
ideo = X1st.Dim.,
x2 = X2nd.Dim.,
role = Role)
names(d)
start_cong <- 82
d1 <- d %>% # strips out 3rd party, before cong 60, make party variable D or R instead of 100 or 200
mutate(leader = ifelse(role == "", NA, "Y")) %>%
filter((party == 100 | party == 200) & cong >= start_cong) %>%
mutate(party2 = ifelse(party == 100, "D","R")) %>%
select(-party) %>%
rename(party = party2)
#< Make party_cong_mean variable and ...
party_means <- data.frame(matrix(NA, nrow = 113, ncol = 0))
party_means$D     <- rep(NA, 113)
party_means$R     <- rep(NA, 113)
party_means$R_del <- rep(NA, 113)
party_means$D_del <- rep(NA, 113)
for(i in (start_cong+1):113) {
party_means$D[i]  <- mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
party_means$R[i]  <- mean(dplyr::filter(d1, cong == i & party == "R")$ideo)
party_means$D_del[i] <- party_means$D[i] - party_means$D[i-1]
party_means$R_del[i] <- party_means$R[i] - party_means$R[i-1]
}
d2 <- dplyr::mutate(d1, party_cong_mean = ifelse(party=="D",
party_means$D[cong],
party_means$R[cong]))
d2 <- dplyr::mutate(d2, party_cong_mean_dif = ifelse(party=="D",
party_means$D_del[cong],
party_means$R_del[cong])) #>
#make last_cong_ideo variable
d2 <- dplyr:: mutate(d2, last_cong_ideo = ifelse(cong > start_cong,
ideo[cong - 1],
NA))
setwd("~/Google Drive/- R Assistance/Trautlein, Hans (student)/thesis")
d <- read.csv("data/SenateData002.csv")
d <- d[,c("Cong.","ICPSR", "State.Code", "State", "Party", "Name", "X1st.Dim.", "X2nd.Dim.", "Role")]
d <- dplyr::rename(d, cong = Cong.,
icpsr = ICPSR,
statecode = State.Code,
state = State,
party = Party,
name = Name,
ideo = X1st.Dim.,
x2 = X2nd.Dim.,
role = Role)
names(d)
start_cong <- 82
d1 <- d %>% # strips out 3rd party, before cong 60, make party variable D or R instead of 100 or 200
mutate(leader = ifelse(role == "", NA, "Y")) %>%
filter((party == 100 | party == 200) & cong >= start_cong) %>%
mutate(party2 = ifelse(party == 100, "D","R")) %>%
select(-party) %>%
rename(party = party2)
#< Make party_cong_mean variable and ...
party_means <- data.frame(matrix(NA, nrow = 113, ncol = 0))
party_means$D     <- rep(NA, 113)
party_means$R     <- rep(NA, 113)
party_means$R_del <- rep(NA, 113)
party_means$D_del <- rep(NA, 113)
for(i in (start_cong+1):113) {
party_means$D[i]  <- mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
party_means$R[i]  <- mean(dplyr::filter(d1, cong == i & party == "R")$ideo)
party_means$D_del[i] <- party_means$D[i] - party_means$D[i-1]
party_means$R_del[i] <- party_means$R[i] - party_means$R[i-1]
}
d2 <- dplyr::mutate(d1, party_cong_mean = ifelse(party=="D",
party_means$D[cong],
party_means$R[cong]))
d2 <- dplyr::mutate(d2, party_cong_mean_dif = ifelse(party=="D",
party_means$D_del[cong],
party_means$R_del[cong])) #>
#make last_cong_ideo variable
d2 <- dplyr:: mutate(d2, last_cong_ideo = ifelse(cong > start_cong,
ideo[cong - 1],
NA))
d2 <- dplyr:: mutate(d2, last_cong_ideo = ifelse(cong > start_cong,
ideo[cong - 1],
NA))
View(d2)
d2 <- dplyr::mutate(d1, party_cong_mean = ifelse(party=="D",
party_means$D[cong],
party_means$R[cong]))
d2 <- dplyr::mutate(d2, party_cong_mean_dif = ifelse(party=="D",
party_means$D_del[cong],
party_means$R_del[cong])) #>
View(d2)
View(party_means)
for(i in (start_cong+1):113) {
party_means$D[i]  <- mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
party_means$R[i]  <- mean(dplyr::filter(d1, cong == i & party == "R")$ideo)
party_means$D_del[i] <- party_means$D[i] - party_means$D[i-1]
party_means$R_del[i] <- party_means$R[i] - party_means$R[i-1]
}
View(party_means)
dplyr::filter(d1, cong == i & party == "D")
dplyr::filter(d1, cong == i & party == "D")$ideo
mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
for(i in (start_cong+1):113) {
party_means$D[i]  <- mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
party_means$R[i]  <- mean(dplyr::filter(d1, cong == i & party == "R")$ideo)
party_means$D_del[i] <- party_means$D[i] - party_means$D[i-1]
party_means$R_del[i] <- party_means$R[i] - party_means$R[i-1]
}
View(party_means)
?which
for(i in (start_cong+1):113) {
party_means$D[i]  <- mean(dplyr::filter(d1, cong == which(i) & party == "D")$ideo)
party_means$R[i]  <- mean(dplyr::filter(d1, cong == which(i) & party == "R")$ideo)
party_means$D_del[i] <- party_means$D[i] - party_means$D[i-1]
party_means$R_del[i] <- party_means$R[i] - party_means$R[i-1]
}
for(i in (start_cong+1):113) {
party_means$D[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
party_means$R[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == "R")$ideo)
party_means$D_del[i] <- party_means$D[i] - party_means$D[i-1]
party_means$R_del[i] <- party_means$R[i] - party_means$R[i-1]
}
View(party_means)
for(i in (start_cong+1):113) {
party_means$D[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
party_means$R[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == "R")$ideo)
party_means$D_del[start_cong - i] <- party_means$D[i] - party_means$D[i-1]
party_means$R_del[start_cong - i] <- party_means$R[i] - party_means$R[i-1]
}
View(party_means)
party_means_table <- d1 %>%
group_by(cong, party) %>%
summarise(mean_cong = mean(cong))
View(party_means_table)
party_means_table <- d1 %>%
group_by(cong, party) %>%
summarise(mean_ideo = mean(ideo))
for(i in (start_cong+1):113) {
party_means$D[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == "D")$ideo)
party_means$R[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == "R")$ideo)
party_means$D_del[start_cong - i] <- party_means$D[start_cong - i] - party_means$D[start_cong - i - 1]
party_means$R_del[start_cong - i] <- party_means$R[start_cong - i] - party_means$R[start_cong - i - 1]
}
View(party_means)
for(i in 2:length(party_means$D)){
party_means$D_del[i] <- party_means$D[i] - party_means$D[i - 1]
party_means$R_del[i] <- party_means$R[i] - party_means$R[i - 1]
}
View(party_means)
vlookup <- function(df, val1, val2, col = 2){
df[df[1] == val1 & df[2] == val2, col][1]
}
vlookup <- function(df, val1, val2, col = 3){
df[df[1] == val1 & df[2] == val2, col][1]
}
party_means_table %>% vlookup(82, "D")
View(party_means)
View(d1)
party_means_wide <- party_means_table %>%
spread(key = party, value = mean_ideo)
library(tidyr)
party_means_wide <- party_means_table %>%
spread(key = party, value = mean_ideo)
View(party_means_wide)
lag(party_means_wide$D, k=1)
party_means_wide <- party_means_wide %>%
mutate(D_lagged <- lag(D, k = 1),
R_lagged <- lag(R, k = 1))
View(party_means_wide)
party_means_wide <- party_means_wide %>%
mutate(D_lagged = lag(D, k = 1),
R_lagged = lag(R, k = 1))
party_means_wide <- party_means_table %>%
spread(key = party, value = mean_ideo)
party_means_wide <- party_means_wide %>%
mutate(D_lagged = lag(D, k = 1),
R_lagged = lag(R, k = 1))
party_means_wide <- party_means_table %>%
spread(key = party, value = mean_ideo)
party_means_wide <- party_means_wide %>%
mutate(D_lagged = lag(D, k = 1),
R_lagged = lag(R, k = 1),
D_del = D - D_lagged,
R_del = R - R_lagged)
options(scipen = 10)
party_means_wide <- party_means_table %>%
spread(key = party, value = mean_ideo)
party_means_wide <- party_means_wide %>%
mutate(D_lagged = lag(D, k = 1),
R_lagged = lag(R, k = 1),
D_del = D - D_lagged,
R_del = R - R_lagged)
with(party_means_wide, D_lagged[2] - D[2])
View(d2)
rm(d2)
d2 <- d1 %>%
mutate(party_cong_mean = vlookup(cong, party))
d2 <- d1 %>%
mutate(party_cong_mean = vlookup(data = d1, val1 = cong, val2 = party))
d2 <- d1 %>%
mutate(party_cong_mean = vlookup(data = party_means_wide, val1 = d1$cong, val2 = d1$party))
d2 <- d1
d2$party_cong_mean <- vlookup(data = party_means_wide, val1 = d1$cong, val2 = d1$party)
d2 <- d1
d2$party_cong_mean <- vlookup(df = party_means_wide, val1 = d1$cong, val2 = d1$party)
party_means <- party_means_wide %>%
gather(key = party, value = party_del, D_del:R_del)
View(party_means)
party_means <- party_means_wide %>%
gather(key = party, value = party_del, D:R)
View(party_means)
party_means <- party_means_wide %>%
select(cong, D_del, R_del) %>%
gather(key = party, value = party_del, D:R)
party_means <- party_means_wide %>%
select(cong, D_del, R_del) %>%
rename(D = D_del, R = R_del) %>%
gather(key = party, value = party_del, D:R)
View(party_means)
for(i in 1:nrow(d1))
d2$party_cong_mean[i] <- vlookup(df = party_means_table, val1 = d1$cong[i], val2 = d1$party[i])
View(d2)
View(party_means)
party_means_dif <- party_means_wide %>%
select(cong, D_del, R_del) %>%
rename(D = D_del, R = R_del) %>%
gather(key = party, value = party_del, D:R)
for(i in 1:nrow(d1)){
d2$party_cong_mean[i] <- vlookup(df = party_means_table, val1 = d1$cong[i], val2 = d1$party[i])
d2$party_cong_mean_dif[i] <- vlookup(df = party_means_dif, val1 = d1$cong[i], val2 = d1$party[i])
}
View(d2)
View(d2)
?lookup
d1$cong[1]
for(i in 1:nrow(d1)){
d2$party_cong_mean[i] <- lookup(df = party_means_table, val1 = d1$cong[i], val2 = d1$party[i])
d2$party_cong_mean_dif[i] <- lookup(df = party_means_dif, val1 = d1$cong[i], val2 = d1$party[i])
d2$last_cong_ideo[i] <- ifelse(d1$cong[i] > start_cong,
lookup(df = party_means_table, val1 = d1$cong[i] - 1, val2 = d1$party[i]),
NA)
}
lookup <- function(df, val1, val2, col = 3){
df[df[1] == val1 & df[2] == val2, col][1]
}
d2 <- d1
for(i in 1:nrow(d1)){
d2$party_cong_mean[i] <- lookup(df = party_means_table, val1 = d1$cong[i], val2 = d1$party[i])
d2$party_cong_mean_dif[i] <- lookup(df = party_means_dif, val1 = d1$cong[i], val2 = d1$party[i])
d2$last_cong_ideo[i] <- ifelse(d1$cong[i] > start_cong,
lookup(df = party_means_table, val1 = d1$cong[i] - 1, val2 = d1$party[i]),
NA)
}
View(d2)
