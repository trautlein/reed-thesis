{
    "contents" : "library(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\noptions(scipen = 10)\n\n#setwd(\"~/Insync/thesis/\")\n#setwd(\"/Volumes/TRAUTLEIN/thesis\")\n#d <- read.csv(\"~/Insync/thesis/data/SenateData002.csv\")\nd <- read.csv(\"data/SenateData002.csv\")\nd <- d[,c(\"Cong.\",\"ICPSR\", \"State.Code\", \"State\", \"Party\", \"Name\", \"X1st.Dim.\", \"X2nd.Dim.\", \"Role\")]\n\nd <- dplyr::rename(d, cong = Cong., \n                   icpsr = ICPSR,\n                   statecode = State.Code,\n                   state = State, \n                   party = Party,\n                   name = Name, \n                   ideo = X1st.Dim., \n                   x2 = X2nd.Dim.,\n                   role = Role)\nnames(d)\n\nstart_cong <- 82\n\nd1 <- d %>% # strips out 3rd party, before cong 60, make party variable D or R instead of 100 or 200\n  mutate(leader = ifelse(role == \"\", NA, \"Y\")) %>%\n  filter((party == 100 | party == 200) & cong >= start_cong) %>%\n  mutate(party2 = ifelse(party == 100, \"D\",\"R\")) %>%\n  select(-party) %>%\n  rename(party = party2)\n\nparty_means_table <- d1 %>% \n  group_by(cong, party) %>%\n  summarise(mean_ideo = mean(ideo))\n\nparty_means_wide <- party_means_table %>%\n  spread(key = party, value = mean_ideo)\n\nlookup <- function(df, val1, val2, col = 3){\n  df[df[1] == val1 & df[2] == val2, col][1]\n}\n\n#for(i in (start_cong+1):113){\n#  party_means$D[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == \"D\")$ideo)\n#  party_means$R[start_cong - i]  <- mean(dplyr::filter(d1, cong == i & party == \"R\")$ideo)\n#}\n\n#for(i in 2:nrow(party_means_table)){\n#  party_means$D_del[i] <- party_means$D[i] - party_means$D[i - 1]\n#  party_means$R_del[i] <- party_means$R[i] - party_means$R[i - 1]\n#}\n\nparty_means_wide <- party_means_wide %>%\n  mutate(D_lagged = lag(D, k = 1))\n   ### R_lagged = lag(R, k = 1),\n   ### D_del = D - D_lagged,\n   ### R_del = R - R_lagged) # add comma after ...1) and fix up\n\nparty_means_wide <- dplyr::mutate(party_means_wide, D_lagged = lag(D, k = 1))\n\n\n\nparty_means_dif <- party_means_wide %>%\n  select(cong, D_del, R_del) %>%\n  rename(D = D_del, R = R_del) %>%\n  gather(key = party, value = party_del, D:R)\n\n#d2 <- dplyr::mutate(d1, party_cong_mean = ifelse(party==\"D\", \n#                                                 party_means$D[cong], \n#                                                 party_means$R[cong]))\n\nd2 <- d1\n\nfor(i in seq_along(nrow(d1))){\n  d2$party_cong_mean[i] <- lookup(df = party_means_table, \n    val1 = d1$cong[i],\n    val2 = d1$party[i])\n  d2$party_cong_mean_dif[i] <- lookup(df = party_means_dif, \n    val1 = d1$cong[i], \n    val2 = d1$party[i])\n  d2$last_cong_ideo[i] <- ifelse(d1$cong[i] > start_cong, \n    lookup(df = party_means_table, \n      val1 = d1$cong[i] - 1, \n      val2 = d1$party[i]),\n    NA)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#d2 <- dplyr::mutate(d2, person_dif = ideo$cong - ideo$(cong-1))\n\n#for(i in 1:length(d1)) {\n#  ifelse(d1$role[i] == \"\", d1$role <- NA, d1$role <- d1$role)\n#}\n\nggplot(dplyr::filter(d2, cong > 90), aes(cong, ideo, color = party)) + geom_point() +\n  scale_color_manual(values=c(\"blue\", \"red\"))\n\nggplot(dplyr::filter(d2, cong > 90, party == \"D\"), aes(cong, ideo, color = party)) + geom_point() +\n  scale_color_manual(values=c(\"blue\"))\n\n\nggplot(data = party_means_table, aes(cong, mean_ideo, color = party)) + geom_point() +\n  scale_color_manual(values=c(\"blue\", \"red\")) + coord_cartesian(ylim = c(-0.8, 0.8))\n",
    "created" : 1459232159440.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2913299451",
    "id" : "71410354",
    "lastKnownWriteTime" : 1459237521,
    "path" : "~/Desktop/Trautlein, Hans (student)/thesis/rcode/main_code.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}